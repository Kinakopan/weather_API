import Head from 'next/head'
import Image from 'next/image'
import { Inter } from '@next/font/google'
import styles from '@/styles/Home.module.css'
import { useState, useEffect } from 'react';
import axios from 'axios'

const inter = Inter({ subsets: ['latin'] })

export default function Home() {
  const [location, setLocation] = useState('');
  const [data, setData] = useState({});
  const [weather, setWeather] = useState();
  const [errorMessage, setErrorMessage] = useState('');
  const [isWeatherLoaded, setIsWeatherLoaded] = useState(false);
  const [weatherImg, setWeatherImg] = useState('/weather.jpeg');
  const [weatherIcon, setWeatherIcon] = useState('');

  useEffect(() => {
    if (isWeatherLoaded) {
      if (weather && weather[0].description.includes("clear")) {
        setWeatherImg('/sunny.jpeg');
      } else if (weather && weather[0].description.includes("clouds")) {
        setWeatherImg('/cloudy.jpeg');
      } else if (weather && weather[0].description.includes("fog") || weather[0].description.includes("haze")) {
        setWeatherImg('/fog.jpeg');
      } else if (weather && weather[0].description.includes("rain") || weather[0].description.includes("mist")) {
      setWeatherImg('/rainy.jpeg');
      } else if (weather && weather[0].description.includes("snow")) {
        setWeatherImg('/snow.jpeg');
      } else if (weather && weather[0].description.includes("thunder")) {
        setWeatherImg('/thunder.webp');
      } else {
        setWeatherImg('/weather.jpeg');
      }
    }
  }, [weather]);


  useEffect(() => {
    if (isWeatherLoaded) {
      if (weather && weather[0].description.includes("clear")) {
        setWeatherIcon('/sunny.png');
      } else if (weather && weather[0].description.includes("clouds")) {
        setWeatherIcon('/cloudy.png');
      } else if (weather && weather[0].description.includes("fog") || weather[0].description.includes("haze")) {
        setWeatherIcon('/fog.png');
      } else if (weather && weather[0].description.includes("rain") || weather[0].description.includes("mist")) {
        setWeatherIcon('/rainy.png');
      } else if (weather && weather[0].description.includes("snow")) {
        setWeatherIcon('/snow.png');
      } else if (weather && weather[0].description.includes("thunder")) {
        setWeatherIcon('/thunder.png');
      } else {
        setWeatherIcon('/empty.png');
      }
    }
  }, [weather]);

  var apiKey = "b1801bbeb4d66c8609c9d891ced57586";
  var lang = "en";
  var units = "metric";
  const url = `https://api.openweathermap.org/data/2.5/weather?q=${location}&units=${units}&appid=${apiKey}&lang=${lang}`//q represents the city name that we're gonna input into the input field

  const searchLocation = (event) => {
    if(event.key === "Enter") {
      axios.get(url)
      .then((response) => {
        console.clear();
        setData(response.data)
        console.log(response.data);
        setWeather(response.data.weather);
        setErrorMessage("");
        setIsWeatherLoaded(true);
      }).catch(err => {
        console.log(err);
        setErrorMessage("Please enter a valid location");
        setData({});
        setWeather();
      })
      console.log(errorMessage);
      setLocation('')//clearing the input field
    }
  }

  // For CSS
  const dlWidth = '100%'
  const dtWidth = '30%'
  const ddWidth = parseFloat(dlWidth) - parseFloat(dtWidth) + '%';
  const dtWidth2 = '85%'
  const ddWidth2 = parseFloat(dlWidth) - parseFloat(dtWidth2) + '%';

  console.log("weatherImg is" + {weatherImg});

  return (
  <div
    className={styles.body}
    style={{backgroundImage: `url(${weatherImg})`}}
    alt="Current weather background image"
    // style={{backgroundImage: `url('/public/sunny.jpeg')`}}
  >
    <div className={styles.bodyWrapper}>
      <Head>
        <title>Weather App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      {/*==============================
                  Header
      ==============================*/}
      <div className={styles.header}>
        <div className={styles.wrapper}>
          <h1 className={styles.h1}>Today's weather</h1>
        </div>
      </div>

      {/*==============================
                  Main
      ==============================*/}
      <main className={styles.main}>
        <div className={styles.wrapper}>

          <div className={styles.sec_input}>
            <input
              className={styles.input}
              value={location}
              onChange={event => setLocation(event.target.value)}
              placeholder="Enter Location"
              onKeyDown={searchLocation}
              type="text"
            />
          </div>

          <div className={styles.sec_result}>
            {
              weather && weather.slice(0,1).map((w, index) => {
                return(
                  <div key={index}>
                    <dl
                      className={styles.dl}
                      style={{width: dlWidth}}
                      >
                        <dt
                          className={styles.dt}
                          style={{width: dtWidth}}
                        >
                          <Image
                            width={50}
                            height={50}
                            src="/location.png"
                            alt="location icon"/>
                        </dt>
                        <dd
                          className={styles.dd}
                          style={{width: ddWidth}}
                        >
                          {data.name}
                        </dd>

                        <dt
                          className={styles.dt}
                          style={{width: dtWidth2}}
                        >{data.main.temp} ℃</dt>
                        <dd
                          className={styles.dd}
                          style={{width: ddWidth2}}
                        >
                          <Image
                            width={50}
                            height={50}
                            src={weatherIcon}
                            alt="weather icon"
                          />
                        </dd>

                        <dt className={styles.dt}>{w.description}</dt>

                        <dt className={styles.dt}>Feels like</dt>
                        <dd className={styles.dd}>{data.main.feels_like} ℃</dd>

                        <dt className={styles.dt}>Lowest</dt>
                        <dd className={styles.dd}>{data.main.temp_min} ℃</dd>

                        <dt className={styles.dt}>Highest</dt>
                        <dd className={styles.dd}>{data.main.temp_max} ℃</dd>

                        <dt className={styles.dt}>Wind Gust</dt>
                        {data.wind.gust ? <dd className={styles.dd}>{data.wind.gust} m/s</dd> : <dd className={styles.dd}>No Data</dd>}
                    </dl>
                  </div>
                )
              })
            }
            {errorMessage && <div>{errorMessage}</div>}
          </div>
        </div>
      </main>

      {/*==============================
                  Footer
      ==============================*/}
    </div>
  </div>
  )
}
